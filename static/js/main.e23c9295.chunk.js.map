{"version":3,"sources":["images/logo.jpg","images/sumit.jpg","components/LoginButton.jsx","components/LogoutButton.jsx","components/Profilenav.jsx","components/navbar.jsx","components/about.jsx","components/contact.jsx","components/Home.jsx","utils/httpService.js","components/UserProfile.jsx","components/profileExtend.jsx","components/ProfilePart.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","LoginButton","useAuth0","loginWithRedirect","isAuthenticated","onClick","className","LogoutButton","logout","Fragment","Profilenav","to","navbar","id","src","logo","alt","Component","about","contact","Home","axios","interceptors","response","use","error","status","toast","Promise","reject","get","put","delete","post","UserProfile","user","given_name","nickname","email","picture","profileExtend","state","posts","getdetails","a","console","clear","http","config","urlEndpoint","data","setState","handleAdd","obj","title","body","log","handleUpdate","index","indexOf","handleDelete","filter","p","this","map","key","ProfilePart","App","path","component","About","Contact","exact","from","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","domain","process","clientId","redirectUri","origin","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"kOAAAA,EAAOC,QAAU,IAA0B,kC,4ECA3CD,EAAOC,QAAU,IAA0B,mC,0JCc5BC,EAXK,WAAO,IAAD,EACsBC,cAArCC,EADe,EACfA,kBACP,OAFsB,EACGC,iBAGrB,6BACI,4BAAQC,QAAS,kBAAIF,KAAqBG,UAAU,0BAApD,WCOGC,EAZM,WAAO,IAAD,EACWL,cAA5BM,EADiB,EACjBA,OAER,OAHyB,EACTJ,iBAIZ,kBAAC,IAAMK,SAAP,KACE,4BAAQJ,QAAS,kBAAMG,KAAUF,UAAU,mBAA3C,UAA6E,MCUtEI,EAhBI,WAGjB,OAF2BR,cAApBE,iBAIH,kBAAC,IAAMK,SAAP,KACE,wBAAIH,UAAU,eACV,kBAAC,IAAD,CAAMA,UAAU,eAAeK,GAAG,YAAlC,cCgCGC,EAnCf,uKAEI,OACE,yBAAKN,UAAU,+CAA+CO,GAAG,UAC/D,yBAAKP,UAAU,gBACb,kBAAC,IAAD,CAAMK,GAAG,SAAQ,yBAAKL,UAAU,sBAAsBQ,IAAKC,IAAMC,IAAI,MACrE,wBAAIV,UAAU,qBAAd,eAEF,wBAAIA,UAAU,gCACZ,wBAAIA,UAAU,sBACZ,kBAAC,IAAD,CAAMA,UAAU,sBAAsBK,GAAG,SAAzC,SAIF,kBAAC,EAAD,MACA,wBAAIL,UAAU,eACZ,kBAAC,IAAD,CAAMA,UAAU,eAAeK,GAAG,UAAlC,UAIF,wBAAIL,UAAU,eACZ,kBAAC,IAAD,CAAMA,UAAU,eAAeK,GAAG,YAAlC,gBAKJ,yBAAKL,UAAU,eACb,kBAAC,EAAD,MACA,kBAAC,EAAD,YA5BV,GAA4BW,aCKbC,EAVf,uKAEQ,OACI,0CAHZ,GAA2BD,aCUZE,EAVf,uKAEQ,OACI,4CAHZ,GAA6BF,aCWbG,EAVF,WACX,OACC,6BACA,yBAAKd,UAAU,YAAYO,GAAG,SAA9B,U,0FCJJQ,IAAMC,aAAaC,SAASC,IAAI,MAAM,SAAAC,GAQlC,OANsBA,EAAMF,UAAYE,EAAMF,SAASG,QAAU,KAAOD,EAAMF,SAASG,OAAO,IAE5FC,IAAMF,MAAM,0BAEVE,YAAM,oBAEFC,QAAQC,OAAOJ,MAEZ,OACXK,IAAKT,IAAMS,IACXC,IAAKV,IAAMU,IACXC,OAAQX,IAAMW,OACdC,KAAMZ,IAAMY,MCEDC,EAhBK,WAAO,IAAD,EACUhC,cAA1BiC,EADgB,EAChBA,KACR,OAFwB,EACV/B,iBAGV,yBAAKE,UAAU,YACb,yBAAKA,UAAU,iCACb,4BAAK6B,EAAKC,YACV,wCAAcD,EAAKE,UACnB,qCAAWF,EAAKG,QAElB,yBAAKxB,IAAKqB,EAAKI,QAASjC,UAAU,iCAAiCU,IAAI,OCsFhEwB,EA3Ff,4MACEC,MAAQ,CACNC,MAAO,IAFX,EAIEC,WAJF,sBAIe,8BAAAC,EAAA,6DACXC,QAAQC,QADG,SAEmBC,EAAKjB,IAAIkB,EAAOC,aAFnC,gBAEGP,EAFH,EAEHQ,KACR,EAAKC,SAAS,CAAET,UAHL,2CAJf,EAUEU,UAVF,sBAUc,kCAAAR,EAAA,6DACJS,EAAM,CACVC,MAAO,iBACPC,KAAM,+BAHE,SAKmBR,EAAKd,KAAKe,EAAOC,YAAaI,GALjD,gBAKIpB,EALJ,EAKFiB,KACRL,QAAQW,IAAIvB,GACNS,EAPI,CAOKT,GAPL,mBAOc,EAAKQ,MAAMC,QAEnC,EAAKS,SAAS,CAAET,UATN,2CAVd,EAsBEe,aAtBF,uCAsBiB,WAAOxB,GAAP,mBAAAW,EAAA,6DACbX,EAAKqB,MAAQ,gBADA,SAEUP,EAAKhB,IAAIiB,EAAOC,YAAc,IAAMhB,EAAKpB,GAAIoB,GAFvD,kBAELiB,KAEFR,EAJO,YAIK,EAAKD,MAAMC,OACvBgB,EAAQhB,EAAMiB,QAAQ1B,GAC5BS,EAAMgB,GAAN,eAAoBzB,GACpB,EAAKkB,SAAS,CAAET,UAPH,2CAtBjB,wDAgCEkB,aAhCF,uCAgCiB,WAAO3B,GAAP,eAAAW,EAAA,sEACMG,EAAKf,OAAOgB,EAAOC,YAAc,IAAMhB,EAAKpB,IADlD,cAEP6B,EAAQ,EAAKD,MAAMC,MAAMmB,QAAO,SAACC,GAAD,OAAOA,EAAEjD,KAAOoB,EAAKpB,MAC3D,EAAKsC,SAAS,CAAET,UAHH,2CAhCjB,6GAqCY,IAAD,OACP,OACE,yBAAKpC,UAAU,aACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,OACb,4BACEA,UAAU,4BACVD,QAAS0D,KAAKpB,YAFhB,iBAMA,kBAAC,IAAD,MACA,4BAAQrC,UAAU,uBAAuBD,QAAS0D,KAAKX,WACpD,IADH,OAIA,2BAAO9C,UAAU,SACf,+BACE,4BACE,qCACA,sCACA,wCAGJ,+BACGyD,KAAKtB,MAAMC,MAAMsB,KAAI,SAAC/B,GAAD,OACpB,wBAAIgC,IAAKhC,EAAKpB,IACZ,4BAAKoB,EAAKqB,OACV,4BACE,4BACEhD,UAAU,sBACVD,QAAS,kBAAM,EAAKoD,aAAaxB,KAFnC,WAOF,4BACE,4BACE3B,UAAU,wBACVD,QAAS,kBAAM,EAAKuD,aAAa3B,KAFnC,uBA1EpB,GAAmChB,aCOpBiD,EARK,WAEhB,OADyBhE,cAApBE,iBAGD,kBAAC,EAAD,O,OCeO+D,EAjBf,uKAEI,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAWC,IAChC,kBAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWE,IAClC,kBAAC,IAAD,CAAOH,KAAK,WAAWC,UAAWH,IAClC,kBAAC,IAAD,CAAOM,OAAK,EAACJ,KAAK,IAAIC,UAAWjD,IACjC,kBAAC,IAAD,CAAUqD,KAAK,QAAQ9D,GAAG,YAVpC,GAAyBM,aCILyD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCPNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,OANOC,4BAOPC,SANSD,mCAOTE,YAAaV,OAAOC,SAASU,OAAO,YAEpC,kBAAC,EAAD,SAINC,SAASC,eAAe,SD4GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAtE,GACLoB,QAAQpB,MAAMA,EAAMuE,c","file":"static/js/main.e23c9295.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b3c09e89.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sumit.6587c34c.jpg\";","import React from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\nconst LoginButton = () => {\r\n    const {loginWithRedirect,isAuthenticated} = useAuth0();\r\n    return ( \r\n        !isAuthenticated && (\r\n        <div>\r\n            <button onClick={()=>loginWithRedirect()} className=\"btn btn-outline-light \">Login</button>\r\n        </div>\r\n     )\r\n    )\r\n}\r\n \r\nexport default LoginButton;","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LogoutButton = () => {\r\n  const { logout, isAuthenticated } = useAuth0();\r\n\r\n  return (\r\n    isAuthenticated && (\r\n      <React.Fragment>\r\n        <button onClick={() => logout()} className=\"btn btn-primary\">Logout</button>{\" \"}\r\n      </React.Fragment>\r\n    )\r\n  );\r\n};\r\n\r\nexport default LogoutButton;\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport {Link} from 'react-router-dom'\r\nconst Profilenav = () => {\r\n  const {isAuthenticated } = useAuth0();\r\n\r\n  return (\r\n    isAuthenticated && (\r\n      <React.Fragment>\r\n        <li className=\"navbar-item\">\r\n            <Link className=\"nav-link lin\" to=\"/profile\">\r\n              Profile\r\n            </Link>\r\n          </li>\r\n      </React.Fragment>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Profilenav;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/main.css\";\r\nimport logo from \"../images/logo.jpg\";\r\nimport Login from \"./LoginButton\";\r\nimport LogoutButton from \"./LogoutButton\";\r\nimport Profilenav from \"./Profilenav\";\r\nexport class navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar navbar-expand-md navbar-dark bg-light\" id=\"navbar\">\r\n        <div className=\"navbar-brand\">\r\n          <Link to=\"/home\"><img className=\"logo rounded-circle\" src={logo} alt=\"\" /></Link>\r\n          <h1 className=\"navbar-brand ml-3\">Restaurant</h1>\r\n        </div>\r\n        <ul className=\"navbar-nav w-100 float-right\">\r\n          <li className=\"navbar-item active\">\r\n            <Link className=\" col-2 nav-link lin\" to=\"/home\">\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <Profilenav />\r\n          <li className=\"navbar-item\">\r\n            <Link className=\"nav-link lin\" to=\"/about\">\r\n              About\r\n            </Link>\r\n          </li>\r\n          <li className=\"navbar-item\">\r\n            <Link className=\"nav-link lin\" to=\"/contact\">\r\n              Contact Us\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <div className=\"float-right\">\r\n          <Login />\r\n          <LogoutButton />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default navbar;\r\n","import React, { Component } from 'react'\r\n\r\nexport class about extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                About\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default about\r\n","import React, { Component } from 'react'\r\n\r\nexport class contact extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Contact\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default contact\r\n","import React, { Component } from \"react\";\r\nimport \"../css/main.css\";\r\n \r\n const Home = () => {\r\n   return (\r\n    <div>\r\n    <div className=\"jumbotron\" id=\"jumbo\">\r\n      Home\r\n    </div>\r\n  </div>\r\n   )\r\n }\r\n \r\n export default Home\r\n\r\n","import axios from \"axios\";\r\nimport { toast } from 'react-toastify';\r\naxios.interceptors.response.use(null, error => {\r\n    \r\n    const expectedError = error.response && error.response.status >= 400 && error.response.status<500;\r\n    if(expectedError){\r\n      toast.error('Expected error occured');\r\n    }else{\r\n        toast(\"Unexpected Error\");\r\n    }\r\n    return  Promise.reject(error);\r\n});\r\nexport default {\r\n    get: axios.get,\r\n    put: axios.put,\r\n    delete: axios.delete,\r\n    post: axios.post\r\n}","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nconst UserProfile = () => {\r\n  const { user, isAuthenticated } = useAuth0();\r\n  return (\r\n    isAuthenticated && (\r\n      <div className=\"row mt-2\">\r\n        <div className=\"col-md-3 col-sm-6 float-right\">\r\n          <h3>{user.given_name}</h3>\r\n          <p>Username: {user.nickname}</p>\r\n          <p>Email: {user.email}</p>\r\n        </div>\r\n        <img src={user.picture} className=\"col-md-3 col-sm-6 profile mb-2\" alt=\"\" />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React, { Component } from \"react\";\r\nimport sumit from \"../images/sumit.jpg\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport config from \"../config/config.json\";\r\nimport http from \"../utils/httpService\";\r\nimport UserProfile from \"./UserProfile\";\r\n\r\nexport class profileExtend extends Component {\r\n  state = {\r\n    posts: [],\r\n  };\r\n  getdetails = async () => {\r\n    console.clear();\r\n    const { data: posts } = await http.get(config.urlEndpoint);\r\n    this.setState({ posts });\r\n  };\r\n\r\n  handleAdd = async () => {\r\n    const obj = {\r\n      title: \"learning react\",\r\n      body: \"React is easy to understand\",\r\n    };\r\n    const { data: post } = await http.post(config.urlEndpoint, obj);\r\n    console.log(post);\r\n    const posts = [post, ...this.state.posts];\r\n\r\n    this.setState({ posts });\r\n  };\r\n\r\n  handleUpdate = async (post) => {\r\n    post.title = \"Updated title\";\r\n    const { data } = await http.put(config.urlEndpoint + \"/\" + post.id, post);\r\n\r\n    const posts = [...this.state.posts];\r\n    const index = posts.indexOf(post);\r\n    posts[index] = { ...post };\r\n    this.setState({ posts });\r\n  };\r\n\r\n  handleDelete = async (post) => {\r\n    const temp = await http.delete(config.urlEndpoint + \"/\" + post.id);\r\n    const posts = this.state.posts.filter((p) => p.id !== post.id);\r\n    this.setState({ posts });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <UserProfile />\r\n        <div className=\"row\">\r\n          <button\r\n            className=\"btn btn-primary mr-2 mb-2\"\r\n            onClick={this.getdetails}\r\n          >\r\n            Fetch Details\r\n          </button>\r\n          <ToastContainer />\r\n          <button className=\"btn btn-primary mb-2\" onClick={this.handleAdd}>\r\n            {\" \"}\r\n            Add\r\n          </button>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Title</th>\r\n                <th>Update</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.posts.map((post) => (\r\n                <tr key={post.id}>\r\n                  <td>{post.title}</td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-info btn-sm\"\r\n                      onClick={() => this.handleUpdate(post)}\r\n                    >\r\n                      Update\r\n                    </button>\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-danger btn-sm\"\r\n                      onClick={() => this.handleDelete(post)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default profileExtend;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/main.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport ProfileExtend from \"./profileExtend\";\r\n\r\nconst ProfilePart = () => {\r\n  const {isAuthenticated } = useAuth0();\r\n    return (\r\n      isAuthenticated && (\r\n        <ProfileExtend/>\r\n      )\r\n    );\r\n}\r\nexport default ProfilePart;\r\n\r\n","import React, { Component } from 'react'\nimport Navbar from './components/navbar'\nimport About from './components/about'\nimport Contact from './components/contact'\nimport Home from './components/Home'\nimport ProfilePart from './components/ProfilePart'\nimport {Route, Switch,Redirect} from 'react-router-dom'\n\nexport class App extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <Switch>\n          <Route path=\"/about\" component={About}/>\n          <Route path=\"/contact\" component={Contact}/>\n          <Route path=\"/profile\" component={ProfilePart}/>\n          <Route exact path=\"/\" component={Home}/>\n          <Redirect from=\"/home\" to=\"/\" />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Auth0Provider\n        domain={domain}\n        clientId={clientId}\n        redirectUri={window.location.origin+\"/profile\"}\n      >\n        <App />\n      </Auth0Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}